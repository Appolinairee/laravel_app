# transaction
    Créer une transaction de paiement :
        Type : POST
        Endpoint : /api/payment-transactions
        Description : Crée une nouvelle transaction de paiement.
        Données requises : user_id, product_id, amount_paid.

    Mettre à jour le statut d'une transaction (par exemple, annuler) :
        Type : PUT
        Endpoint : /api/payment-transactions/{transaction_id}
        Description : Met à jour le statut d'une transaction de paiement.


    Lister toutes les transactions d'un utilisateur :

        Type : GET
        Endpoint : /api/payment-transactions/user/{user_id}
        Description : Récupère toutes les transactions de paiement d'un utilisateur.


    Obtenir les transactions d'un utilisateur pour un produit :

        Type : GET
        Endpoint : /api/payment-transactions/user/{user_id}/product/{product_id}
        Description : Récupère toutes les transactions de paiement d'un utilisateur pour un produit spécifique.
















# creator is real creator when his status is 1: else he should attempt to admin verfication
















## Let's think this

# request to restore account: from user only :: post user/restore  ::: admin
# restore user route ::: admin
#  admin only can restore account
# style welcome notification and other notifications
# Day format, date should be format in api directly

# message and notify admins for creating creator and product: for its authentification
# admins should made creator status to 1


# how to send json format? We want to store json attrribut (such as caracteristics, delievering, ...) as text, should api receive json to transform to text, or the client should format json to text before send it?

# Système de Recommandation Simple: on se base sur les métadonnées pour prooser au client des produits

# admin should really access the data in every trash also

# improve similar products
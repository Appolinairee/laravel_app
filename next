# orderItems
    # think to create general policy to manage orderItem



# orders
    Passer une nouvelle commande : POST /api/orders

    Mettre à jour les détails d'une commande spécifique :PUT /api/orders/{order_id}
    Confirmer le paiement d'une commande: PUT /api/orders/{order_id}/confirm-payment

    Lister toutes les commandes :GET /api/orders
    Lister toutes les commandes d'un utilisateur : GET /api/orders/user/{user_id}
    Récupérer les détails d'une commande spécifique : GET /api/orders/{order_id}
    Obtenir l'historique des commandes : GET /api/orders/user/{user_id}/history

    Annuler une commande : DELETE /api/orders/{order_id}

# delievering
# payment





















# creator is real creator when his status is 1: else he should attempt to admin verfication
















## Let's think this

# request to restore account: from user only :: post user/restore  ::: admin
# restore user route ::: admin
#  admin only can restore account
# style welcome notification and other notifications
# Day format, date should be format in api directly

# message and notify admins for creating creator and product: for its authentification
# admins should made creator status to 1


# how to send json format? We want to store json attrribut (such as caracteristics, delievering, ...) as text, should api receive json to transform to text, or the client should format json to text before send it?

# Système de Recommandation Simple: on se base sur les métadonnées pour prooser au client des produits

# admin should really access the data in every trash also

# improve similar products